{% extends 'base.html.twig' %}

{% block title %}Gestion des Clients{% endblock %}


{% block stylesheets %}
<style>
    @media (max-width: 768px) {
        .sidebar {
            display: none;
        }

        .mobile-sidebar {
            display: flex;
        }
    }

    nav input[type="text"] {
        width: auto;
        flex-grow: 1;
    }

    .scrollable {
        max-height: 50vh;
        overflow-y: auto;
    }

    .sidebar:hover {
        width: 250px;
    }

    .sidebar a span {
        display: none;
    }

    .sidebar:hover a span {
        display: inline;
    }
</style>
{%endblock %}

{% block body %}
<!DOCTYPE html>
<html lang="fr">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Page Client</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">

   
</head>

<body class="bg-gray-100 flex h-screen">
    <div class="h-screen w-full bg-white relative flex overflow-hidden">
        <aside id="sidebar" class="sidebar h-full w-16 flex flex-col space-y-10 items-center justify-center relative bg-gray-800 text-white md:flex hidden">
            <ul class="space-y-4">
                <li><a href="#" class="flex items-center hover:bg-blue-600 px-4 py-2 rounded"><i class="fas fa-tachometer-alt"></i><span class="hidden"> Tableau de bord</span></a></li>
                <li><a href="#" class="flex items-center hover:bg-blue-600 px-4 py-2 rounded"><i class="fas fa-users"></i><span class="hidden"> Utilisateurs</span></a></li>
                <li><a href="#" class="flex items-center hover:bg-blue-600 px-4 py-2 rounded"><i class="fas fa-box-open"></i><span class="hidden"> Produits</span></a></li>
                <li><a href="#" class="flex items-center hover:bg-blue-600 px-4 py-2 rounded"><i class="fas fa-shopping-cart"></i><span class="hidden"> Commandes</span></a></li>
            </ul>
        </aside>

        <div class="w-full h-full flex flex-col justify-between">
            <header class="h-16 w-full flex items-center relative justify-start px-5 space-x-10 bg-gray-800">
                <div class="flex flex-shrink-0 items-center space-x-4 text-white">
                    <div class="h-10 w-10 rounded-full cursor-pointer bg-gray-200 border-2 border-blue-400"></div>
                    <div class="flex flex-col items-start">
                        <div class="text-md font-medium">Jagne Issa</div>
                        <div class="text-sm font-regular">Student</div>
                    </div>
                </div>

                <div class="flex-grow mx-5">
                    <input type="text" id="search" placeholder="Rechercher..." class="h-10 w-full px-3 rounded-md border border-gray-300" />
                </div>

                <button class="h-10 px-4 bg-red-600 text-white rounded-md">Déconnexion</button>
            </header>

            <main class="max-w-full h-full flex relative overflow-y-hidden">
                <div class="h-full w-full m-4 flex flex-wrap items-start justify-between">
                    <!-- Formulaire pour créer un client -->
                    <div class="w-1/2 p-4 bg-gray-200 rounded-lg">
                        <h2 class="text-lg font-bold mb-4">Créer un Client</h2>
                        <form id="clientForm" class="space-y-4" onsubmit="addClient(event)">
                            <div>
                                <label for="clientName" class="block text-sm font-medium text-gray-700">Nom</label>
                                <input type="text" id="clientName" name="clientName" required class="mt-1 block w-full border border-gray-300 rounded-md p-2" />
                            </div>
                            <div>
                                <label for="clientEmail" class="block text-sm font-medium text-gray-700">Email</label>
                                <input type="email" id="clientEmail" name="clientEmail" required class="mt-1 block w-full border border-gray-300 rounded-md p-2" />
                            </div>
                            <div>
                                <label for="clientPhone" class="block text-sm font-medium text-gray-700">Téléphone</label>
                                <input type="tel" id="clientPhone" name="clientPhone" required class="mt-1 block w-full border border-gray-300 rounded-md p-2" />
                            </div>
                            <button type="submit" class="w-full bg-blue-600 text-white p-2 rounded-md">Créer Client</button>
                        </form>
                    </div>

                    <!-- Formulaire de recherche -->
                    <div class="w-full p-4 bg-gray-200 rounded-lg mb-4">
                        <h2 class="text-lg font-bold mb-4">Rechercher un Client</h2>
                        <form method="POST" action="{{ path('client_search') }}" class="space-y-4">
                            <div>
                                <label for="telephone" class="block text-sm font-medium text-gray-700">Téléphone:</label>
                                <input type="text" name="telephone" id="telephone" required class="mt-1 block w-full border border-gray-300 rounded-md p-2">
                            </div>
                            <div>
                                <label for="surname" class="block text-sm font-medium text-gray-700">Nom:</label>
                                <input type="text" name="surname" id="surname" required class="mt-1 block w-full border border-gray-300 rounded-md p-2">
                            </div>
                            <div>
                                <label for="enum" class="block text-sm font-medium text-gray-700">Enum:</label>
                                <select name="enum" id="enum" required class="mt-1 block w-full border border-gray-300 rounded-md p-2">
                                    <option value="option1">Option 1</option>
                                    <option value="option2">Option 2</option>
                                </select>
                            </div>
                            <div>
                                <label for="compte" class="block text-sm font-medium text-gray-700">Créer un compte:</label>
                                <input type="checkbox" name="compte" id="compte" value="true" class="mt-1">
                            </div>
                            <button type="submit" class="w-full bg-blue-600 text-white p-2 rounded-md">Rechercher</button>
                        </form>

                        {% if app.request.method == 'POST' %}
                            {% set telephone = app.request.post.get('telephone') %}
                            {% set surname = app.request.post.get('surname') %}
                            {% set enum = app.request.post.get('enum') %}
                            {% set compte = app.request.post.get('compte') %}
                            
                            {% if telephone is not empty %}
                                <div class="mt-4 p-2 bg-white border border-gray-300 rounded">
                                    <h3 class="font-bold">Résultats de la recherche :</h3>
                                    <p><strong>Téléphone:</strong> {{ telephone }}</p>
                                    <p><strong>Nom:</strong> {{ surname }}</p>
                                    <p><strong>Enum:</strong> {{ enum }}</p>
                                    <p><strong>Créer un compte:</strong> {{ compte ? 'Oui' : 'Non' }}</p>
                                </div>
                            {% else %}
                                <p class="mt-4 text-red-600">Aucun résultat trouvé.</p>
                            {% endif %}
                        {% endif %}
                    </div>
                </div>
            </main>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('client-form');
            const clientList = document.querySelector('.client-list');
            const messageContainer = document.getElementById('message-container');
    
            form.addEventListener('submit', function (event) {
                event.preventDefault(); // Empêche le rechargement de la page
    
                const firstName = document.getElementById('firstName').value;
                const phone = document.getElementById('phone').value;
                const address = document.getElementById('address').value;
    
                // Valider les champs (vous pouvez ajouter plus de validation si nécessaire)
                if (!firstName || !phone || !address) {
                    displayMessage('Veuillez remplir tous les champs.', 'error');
                    return;
                }
    
                // Ajouter le nouveau client à la liste
                const newRow = document.createElement('tr');
                newRow.innerHTML = `
                    <td class="px-6 py-4">${firstName}</td>
                    <td class="px-6 py-4">${phone}</td>
                    <td class="px-6 py-4">${address}</td>
                    <td class="px-6 py-4">
                        <button class="px-2 py-1 bg-yellow-500 text-white rounded-md shadow hover:bg-yellow-600" onclick="editClient(this)">
                            <i class="fas fa-edit"></i>
                        </button>
                        <button class="px-2 py-1 bg-red-500 text-white rounded-md shadow hover:bg-red-600" onclick="deleteClient(this)">
                            <i class="fas fa-trash"></i>
                        </button>
                    </td>
                `;
                clientList.appendChild(newRow);
    
                // Envoyer les données au serveur
                sendDataToServer({ firstName, phone, address });
    
                // Réinitialiser le formulaire
                form.reset();
            });
    
            function editClient(button) {
                const row = button.closest('tr');
                const cells = row.querySelectorAll('td');
                const firstName = cells[0].innerText;
                const phone = cells[1].innerText;
                const address = cells[2].innerText;
    
                // Remplir le formulaire avec les données du client
                document.getElementById('firstName').value = firstName;
                document.getElementById('phone').value = phone;
                document.getElementById('address').value = address;
    
                // Supprimer la ligne pour éviter les doublons lors de l'ajout
                row.remove();
            }
    
            function deleteClient(button) {
                const row = button.closest('tr');
                row.remove(); // Supprime la ligne du client
            }
    
            function sendDataToServer(data) {
                // Remplacez '/path/to/your/api/clients' par l'URL de votre API
                fetch('/path/to/your/api/clients', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify(data)
                })
                .then(response => response.json())
                .then(data => {
                    displayMessage('Client ajouté avec succès.', 'success');
                })
                .catch((error) => {
                    console.error('Error:', error);
                    displayMessage('Erreur lors de l\'ajout du client.', 'error');
                });
            }
    
            function displayMessage(message, type) {
                // Créer un élément de message
                const messageElement = document.createElement('div');
                messageElement.innerText = message;
                messageElement.className = `message ${type}`; // Ajoutez des styles CSS pour 'success' et 'error'
                messageContainer.appendChild(messageElement);
    
                // Supprimer le message après quelques secondes
                setTimeout(() => {
                    messageElement.remove();
                }, 3000);
            }
        });
    </script>
    
</body>

</html>
{% endblock %}
